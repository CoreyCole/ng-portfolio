{
  "_args": [
    [
      {
        "raw": "firebase-token-generator@https://registry.npmjs.org/firebase-token-generator/-/firebase-token-generator-2.0.0.tgz",
        "scope": null,
        "escapedName": "firebase-token-generator",
        "name": "firebase-token-generator",
        "rawSpec": "https://registry.npmjs.org/firebase-token-generator/-/firebase-token-generator-2.0.0.tgz",
        "spec": "https://registry.npmjs.org/firebase-token-generator/-/firebase-token-generator-2.0.0.tgz",
        "type": "remote"
      },
      "/Users/clutch/Workspace/ng-portfolio/functions/node_modules/firebase-admin"
    ]
  ],
  "_from": "firebase-token-generator@https://registry.npmjs.org/firebase-token-generator/-/firebase-token-generator-2.0.0.tgz",
  "_id": "firebase-token-generator@2.0.0",
  "_inCache": true,
  "_location": "/firebase-admin/firebase-token-generator",
  "_phantomChildren": {},
  "_requested": {
    "raw": "firebase-token-generator@https://registry.npmjs.org/firebase-token-generator/-/firebase-token-generator-2.0.0.tgz",
    "scope": null,
    "escapedName": "firebase-token-generator",
    "name": "firebase-token-generator",
    "rawSpec": "https://registry.npmjs.org/firebase-token-generator/-/firebase-token-generator-2.0.0.tgz",
    "spec": "https://registry.npmjs.org/firebase-token-generator/-/firebase-token-generator-2.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [],
  "_resolved": "https://registry.npmjs.org/firebase-token-generator/-/firebase-token-generator-2.0.0.tgz",
  "_shasum": "9767d759ec13abdc99ba115fd5ea99d8b93d1206",
  "_shrinkwrap": null,
  "_spec": "firebase-token-generator@https://registry.npmjs.org/firebase-token-generator/-/firebase-token-generator-2.0.0.tgz",
  "_where": "/Users/clutch/Workspace/ng-portfolio/functions/node_modules/firebase-admin",
  "author": {
    "name": "Firebase"
  },
  "bugs": {
    "url": "https://github.com/firebase/firebase-token-generator-node/issues"
  },
  "dependencies": {},
  "description": "A utility to generate signed Firebase Authentication Tokens",
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-closure-tools": "~0.9.2",
    "grunt-concurrent": "~0.4.3",
    "grunt-contrib-jasmine": "~0.6.1",
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-exec": "~0.4.3",
    "grunt-mocha": "~0.4.10",
    "load-grunt-tasks": "~0.3.0"
  },
  "homepage": "https://github.com/firebase/firebase-token-generator-node",
  "keywords": [
    "Firebase",
    "JWT"
  ],
  "license": "MIT",
  "main": "./dist/firebase-token-generator-node.js",
  "name": "firebase-token-generator",
  "optionalDependencies": {},
  "readme": "# Firebase Token Generator - Node.js\n\n[![Build Status](https://travis-ci.org/firebase/firebase-token-generator-node.svg)](https://travis-ci.org/firebase/firebase-token-generator-node)\n[![Version](https://badge.fury.io/gh/firebase%2Ffirebase-token-generator-node.svg)](http://badge.fury.io/gh/firebase%2Ffirebase-token-generator-node)\n\n[Firebase Custom Login](https://www.firebase.com/docs/web/guide/simple-login/custom.html)\ngives you complete control over user authentication by allowing you to authenticate users\nwith secure JSON Web Tokens (JWTs). The auth payload stored in those tokens is available\nfor use in your Firebase [security rules](https://www.firebase.com/docs/security/api/rule/).\nThis is a token generator library for [Node.js](http://nodejs.org/) which allows you to\neasily create those JWTs.\n\n\n## Installation\n\nThe Firebase Node.js token generator library is available via npm:\n\n```bash\n$ npm install firebase-token-generator --save\n```\n\nYou can also download it via Bower:\n\n```bash\n$ bower install firebase-token-generator --save\n```\n\n## A Note About Security\n\n**IMPORTANT:** Because token generation requires your Firebase Secret, you should only generate\ntokens on *trusted servers*. Never embed your Firebase Secret directly into your application and\nnever share your Firebase Secret with a connected client.\n\n\n## Generating Tokens\n\nTo generate tokens, you'll need your Firebase Secret which you can find by entering your Firebase\nURL into a browser and clicking the \"Secrets\" tab on the left-hand navigation menu.\n\nOnce you've downloaded the library and grabbed your Firebase Secret, you can generate a token with\nthis snippet of Node.js code:\n\n```js\nvar FirebaseTokenGenerator = require(\"firebase-token-generator\");\nvar tokenGenerator = new FirebaseTokenGenerator(\"<YOUR_FIREBASE_SECRET>\");\nvar token = tokenGenerator.createToken({uid: \"1\", some: \"arbitrary\", data: \"here\"});\n```\n\nThe payload passed to `createToken()` is made available for use within your\nsecurity rules via the [`auth` variable](https://www.firebase.com/docs/security/api/rule/auth.html).\nThis is how you pass trusted authentication details (e.g. the client's user ID)\nto your Firebase security rules. The payload can contain any data of your\nchoosing, however it must contain a \"uid\" key, which must be a string of less\nthan 256 characters. The generated token must be less than 1024 characters in\ntotal.\n\n\n## Token Options\n\nA second `options` argument can be passed to `createToken()` to modify how Firebase treats the\ntoken. Available options are:\n\n* **expires** (Number) - A timestamp (as number of seconds since the epoch) denoting the time\nafter which this token should no longer be valid.\n\n* **notBefore** (Number) - A timestamp (as number of seconds since the epoch) denoting the time\nbefore which this token should be rejected by the server.\n\n* **admin** (Boolean) - Set to `true` if you want to disable all security rules for this client.\nThis will provide the client with read and write access to your entire Firebase.\n\n* **debug** (Boolean) - Set to `true` to enable debug output from your security rules. This\ndebug output will be automatically output to the JavaScript console. You should generally\n*not* leave this set to `true` in production (as it slows down the rules implementation and\ngives your users visibility into your rules), but it can be helpful for debugging.\n\nHere is an example of how to use the second `options` argument:\n\n```js\nvar FirebaseTokenGenerator = require(\"firebase-token-generator\");\nvar tokenGenerator = new FirebaseTokenGenerator(\"<YOUR_FIREBASE_SECRET>\");\nvar token = tokenGenerator.createToken(\n  {uid: \"1\", some: \"arbitrary\", data: \"here\"},\n  {admin: true}\n);\n```\n\n## Testing and Compiling From Source\n\nPrior to compiling from source, install all necessary dependencies:\n\n```bash\n$ git clone git@github.com:firebase/firebase-token-generator-node.git\n$ git submodule update --init\n$ npm install -g grunt-cli mocha phantomjs\n$ npm install\n$ grunt\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/firebase/firebase-token-generator-node.git"
  },
  "scripts": {
    "test": "grunt build test"
  },
  "version": "2.0.0"
}

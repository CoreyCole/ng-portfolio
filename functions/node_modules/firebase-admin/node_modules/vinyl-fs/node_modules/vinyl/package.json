{
  "_args": [
    [
      {
        "raw": "vinyl@https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
        "scope": null,
        "escapedName": "vinyl",
        "name": "vinyl",
        "rawSpec": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
        "spec": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
        "type": "remote"
      },
      "/Users/clutch/Workspace/ng-portfolio/functions/node_modules/firebase-admin"
    ]
  ],
  "_from": "vinyl@https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
  "_id": "vinyl@0.4.6",
  "_inCache": true,
  "_location": "/firebase-admin/vinyl-fs/vinyl",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vinyl@https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
    "scope": null,
    "escapedName": "vinyl",
    "name": "vinyl",
    "rawSpec": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
    "spec": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/firebase-admin/vinyl-fs"
  ],
  "_resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
  "_shasum": "2f356c87a550a255461f36bbeb2a5ba8bf784847",
  "_shrinkwrap": null,
  "_spec": "vinyl@https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
  "_where": "/Users/clutch/Workspace/ng-portfolio/functions/node_modules/firebase-admin",
  "author": {
    "name": "Fractal",
    "email": "contact@wearefractal.com",
    "url": "http://wearefractal.com/"
  },
  "bugs": {
    "url": "https://github.com/wearefractal/vinyl/issues"
  },
  "dependencies": {
    "clone": "^0.2.0",
    "clone-stats": "^0.0.1"
  },
  "description": "A virtual file format",
  "devDependencies": {
    "buffer-equal": "0.0.1",
    "coveralls": "^2.6.1",
    "event-stream": "^3.1.0",
    "istanbul": "^0.3.0",
    "jshint": "^2.4.1",
    "lodash.templatesettings": "^2.4.1",
    "mocha": "^2.0.0",
    "mocha-lcov-reporter": "^0.0.1",
    "rimraf": "^2.2.5",
    "should": "^4.0.4"
  },
  "engines": {
    "node": ">= 0.9"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "homepage": "http://github.com/wearefractal/vinyl",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/wearefractal/vinyl/raw/master/LICENSE"
    }
  ],
  "main": "./index.js",
  "name": "vinyl",
  "optionalDependencies": {},
  "readme": "# vinyl [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Dependency Status](https://david-dm.org/wearefractal/vinyl.png?theme=shields.io)](https://david-dm.org/wearefractal/vinyl)\n\n\n## Information\n\n<table>\n<tr> \n<td>Package</td><td>vinyl</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>A virtual file format</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.9</td>\n</tr>\n</table>\n\n## What is this?\n\nRead this for more info about how this plays into the grand scheme of things https://medium.com/@eschoff/3828e8126466\n\n## File\n\n```javascript\nvar File = require('vinyl');\n\nvar coffeeFile = new File({\n  cwd: \"/\",\n  base: \"/test/\",\n  path: \"/test/file.coffee\",\n  contents: new Buffer(\"test = 123\")\n});\n```\n\n### constructor(options)\n\n#### options.cwd\n\nType: `String`  \nDefault: `process.cwd()`\n\n#### options.base\n\nUsed for relative pathing. Typically where a glob starts.\n\nType: `String`  \nDefault: `options.cwd`\n\n#### options.path\n\nFull path to the file.\n\nType: `String`  \nDefault: `null`\n\n#### options.stat\n\nThe result of an fs.stat call. See [fs.Stats](http://nodejs.org/api/fs.html#fs_class_fs_stats) for more information.\n\nType: `fs.Stats`  \nDefault: `null`\n\n#### options.contents\n\nFile contents.\n\nType: `Buffer, Stream, or null`  \nDefault: `null`\n\n### isBuffer()\n\nReturns true if file.contents is a Buffer.\n\n### isStream()\n\nReturns true if file.contents is a Stream.\n\n### isNull()\n\nReturns true if file.contents is null.\n\n### clone()\n\nReturns a new File object with all attributes cloned. Custom attributes are deep-cloned.\n\n### pipe(stream[, opt])\n\nIf file.contents is a Buffer, it will write it to the stream.\n\nIf file.contents is a Stream, it will pipe it to the stream.\n\nIf file.contents is null, it will do nothing.\n\nIf opt.end is false, the destination stream will not be ended (same as node core).\n\nReturns the stream.\n\n### inspect()\n\nReturns a pretty String interpretation of the File. Useful for console.log.\n\n### relative\n\nReturns path.relative for the file base and file path.\n\nExample:\n\n```javascript\nvar file = new File({\n  cwd: \"/\",\n  base: \"/test/\",\n  path: \"/test/file.coffee\"\n});\n\nconsole.log(file.relative); // file.coffee\n```\n\n[npm-url]: https://npmjs.org/package/vinyl\n[npm-image]: https://badge.fury.io/js/vinyl.png\n[travis-url]: https://travis-ci.org/wearefractal/vinyl\n[travis-image]: https://travis-ci.org/wearefractal/vinyl.png?branch=master\n[coveralls-url]: https://coveralls.io/r/wearefractal/vinyl\n[coveralls-image]: https://coveralls.io/repos/wearefractal/vinyl/badge.png\n[depstat-url]: https://david-dm.org/wearefractal/vinyl\n[depstat-image]: https://david-dm.org/wearefractal/vinyl.png\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/wearefractal/vinyl.git"
  },
  "scripts": {
    "coveralls": "istanbul cover _mocha -- -R spec && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "test": "mocha --reporter spec && jshint lib"
  },
  "version": "0.4.6"
}
